{
  "swagger": "2.0",
  "info": {
    "description": "This is a Weather server",
    "version": "1.0.0",
    "title": "CS561 - Assignment 4: Swagger"
  },
  "host": "localhost:3000",
  "basePath": "/v1",
  "tags": [
    {
      "name": "v1",
      "description": "Weather API"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/weather": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "MockWeather API",
        "description": "Mocks OpenWeather's endpoint",
        "operationId": "getWeather",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful mocking of data",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "coord": {
                  "lon": -123.262,
                  "lat": 44.5646
                },
                "weather": [
                  {
                    "id": 801,
                    "main": "Clouds",
                    "description": "few clouds",
                    "icon": "02d"
                  }
                ],
                "base": "stations",
                "main": {
                  "temp": 47.19,
                  "feels_like": 47.19,
                  "temp_min": 42.71,
                  "temp_max": 55.81,
                  "pressure": 1024,
                  "humidity": 75,
                  "sea_level": 1024,
                  "grnd_level": 1016
                },
                "visibility": 10000,
                "wind": {
                  "speed": 2.39,
                  "deg": 17,
                  "gust": 2.55
                },
                "clouds": {
                  "all": 22
                },
                "dt": 1642982860,
                "sys": {
                  "type": 2,
                  "id": 2010260,
                  "country": "US",
                  "sunrise": 1642952435,
                  "sunset": 1642986538
                },
                "timezone": -28800,
                "id": 5720727,
                "name": "Corvallis",
                "cod": 200
              }
            }
          },
          "405": {
            "description": "Invalid request for data"
          }
        }
      }
    },
    "/hello": {
      "get": {
        "tags": [
          "v1"
        ],
        "summary": "Returns a greeting",
        "description": "Should return a greeting of our choice",
        "operationId": "getGreeting",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": {
                "message": "Hello Swagger!"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "v1"
        ],
        "summary": "Authentication",
        "description": "Accepts a username and password and return a mock token",
        "operationId": "authorizeUsers",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Tags to filter by",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "examples": {
              "application/json": {
                "token": {
                  "message": "some_token_for_api"
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    }
  },
  "definitions": {
    "Main": {
      "type": "object",
      "properties": {
        "temp": {
          "type": "integer",
          "format": "int64"
        },
        "mintemp": {
          "type": "integer",
          "format": "int64"
        },
        "maxtemp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Main"
      }
    },
    "V1": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "main": {
          "$ref": "#/definitions/Main"
        },
        "name": {
          "type": "string",
          "example": "Corvallis"
        }
      },
      "xml": {
        "name": "V1"
      }
    },
    "Users": {
      "type": "object",
      "required": [
        "body"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Users"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}